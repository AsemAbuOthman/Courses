#include <iostream>
#include <string>
#include<cmath>
#include<iomanip>
#include<ctime>

using namespace std;

enum enDatePeriod { Before = -1, Equal = 0, After = 1 };

struct stDate
{
	int Day = 0;
	int Month = 0;
	int Year = 0;

};

struct stPeriod
{
	stDate StartDate;
	stDate EndDate;
};

int ReadNumber(string message)
{
	int number = 0;

	cout << message;
	cin >> number;


	return number;
}

string ReadString(string message)
{
	string text = "";

	cout << message;
	cin >> text;


	return text;
}

stDate ReadFullDate()
{
	stDate Date;

	Date.Day = ReadNumber("Plz enter a day ? ");
	Date.Month = ReadNumber("Plz enter a month ? ");
	Date.Year = ReadNumber("Plz enter a year ? ");

	cout << endl;

	return Date;
}

bool IsLeapYear(int year)
{
	return year % 400 == 0 ? true : year % 100 != 0 && year % 4 == 0 ? true : false;
}

int NumberOfDaysInMonth(int year, int month)
{
	if (month < 1 || month > 12)
		return 0;

	int arr12Days[] = { 31,30,31,30,31,30,31,31,30,31,30,31 };

	return month == 2 ? (IsLeapYear(year) ? 29 : 28) : arr12Days[month - 1];
}

bool IsValidMonth(stDate Date) 
{
	return (Date.Month <= 12) && (Date.Month >= 1);
}

bool IsValidDay(stDate Date) 
{
	return  (Date.Day >= 1) && (Date.Day <= NumberOfDaysInMonth(Date.Year, Date.Month));
}

bool IsValidDate(stDate Date) 
{
	return IsValidMonth(Date) && IsValidDay(Date);
}

stDate StringToDate( string strDate) 
{
	stDate Date;

	short count = 0;

	for (short i = 0; i < strDate.length(); i++) 
	{
		if (strDate[i] == '/')
		{

			count == 0 ? Date.Day = stoi(strDate.substr(0, i)) : Date.Month = stoi(strDate.substr(0, i));
			strDate.erase(0, i + 1);
			
			count++;
			i = 0;
		}
	}

	Date.Year = stoi(strDate);

	return Date;
}

string DateToString(stDate Date) 
{
	return  to_string(Date.Day) + "/" + to_string(Date.Month) + "/" + to_string(Date.Year);
}

string FormateDate(stDate Date, string formate = "dd/mm/yyyy")
{
	if (formate == "dd/mm/yyyy") 
	{
		formate = to_string(Date.Day) + "/" + to_string(Date.Month) + "/" + to_string(Date.Year);
	}
	else if (formate == "yyyy/dd/mm")
	{
		formate = to_string(Date.Year) + "/" + to_string(Date.Day) + "/" + to_string(Date.Month);
	
	}
	else if (formate == "mm/dd/yyyy")
	{
		formate = to_string(Date.Month)  + "/" + to_string(Date.Day) + "/" + to_string(Date.Year);

	}
	else if (formate == "mm-dd-yyyy")
	{
		formate = to_string(Date.Month) + "-" + to_string(Date.Day) + "-" + to_string(Date.Year);

	}
	else if (formate == "dd-mm-yyyy")
	{
		formate = to_string(Date.Day) + "-" + to_string(Date.Month) + "-" + to_string(Date.Year);

	}
	else if(formate == "Day,Month,Year")
	{
		formate = "Day: " + to_string(Date.Day) + ", Month: " + to_string(Date.Month) + ", Year: " + to_string(Date.Year);

	}

	return formate;
}


int main()
{
	string strDate = ReadString("Plz enter date dd/mm/yyyy ? ");

	cout << endl;
	cout << FormateDate(StringToDate(strDate), "dd/mm/yyyy") << endl;
	cout << FormateDate(StringToDate(strDate), "yyyy/dd/mm") << endl;
	cout << FormateDate(StringToDate(strDate), "mm/dd/yyyy") << endl;
	cout << FormateDate(StringToDate(strDate), "mm-dd-yyyy") << endl;
	cout << FormateDate(StringToDate(strDate), "dd-mm-yyyy") << endl;
	cout << FormateDate(StringToDate(strDate), "Day,Month,Year") << endl;


	return 0;
}