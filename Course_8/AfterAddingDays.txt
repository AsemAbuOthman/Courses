#include <iostream>
#include <string>
#include<cmath>
#include<iomanip>

using namespace std;

struct stDate
{
	short Day = 0;
	short Month = 0;
	short Year = 0;

};

int ReadNumber(string message)
{
	int number = 0;

	cout << message;
	cin >> number;

	cout << endl << endl;

	return number;
}

bool IsLeapYear(short year)
{
	return year % 400 == 0 ? true : year % 100 != 0 && year % 4 == 0 ? true : false;
}

short NumberOfDaysInMonth(short year, short month)
{
	if (month < 1 || month > 12)
		return 0;

	short arr12Days[] = { 31,30,31,30,31,30,31,31,30,31,30,31 };

	return month == 2 ? (IsLeapYear(year) ? 29 : 28) : arr12Days[month - 1];
}

short NumberOfDaysFromBeginningOfYear(short year, short month, short day)
{
	short sum = 0;

	for (short i = 1; i < month; i++)
	{
		sum += NumberOfDaysInMonth(year, i);
	}

	return sum + day;
}


stDate GetDateFromDayOrderInYear(short dayOrderInYear, short addedDays, short year)
{
	stDate Date;

	short month = 1;
	short remmaningDays = 0;
	short newYear = year - 1;
	short numberOfLeapYears = 0;

	while (true) 
	{
		if (remmaningDays < dayOrderInYear + addedDays)
		{
			if (IsLeapYear(newYear))
			{

				remmaningDays += 366;
				numberOfLeapYears++;
			}
			else 
			{
				remmaningDays += 365;
			
			}

			
			newYear += 1;

		}
		else 
		{

			if (IsLeapYear(year)) 
			{
				dayOrderInYear = addedDays - (366 - dayOrderInYear) - numberOfLeapYears;

			}
			else 
			{
				dayOrderInYear = addedDays - (365 - dayOrderInYear) - numberOfLeapYears;

			}

			Date.Year = newYear;
			break;
		}
	} 
	
	remmaningDays = 0;

	while (true)
	{
		if (remmaningDays < dayOrderInYear)
		{
			remmaningDays += NumberOfDaysInMonth(newYear, month);
			month++;
		}
		else
		{
			Date.Month = month - 1;
			Date.Day = NumberOfDaysInMonth(newYear, month - 1) - (remmaningDays - dayOrderInYear);

			break;
		}

	}

	return Date;
}


int main()
{
	short day = ReadNumber("Plz enter a day ? ");
	short month = ReadNumber("Plz enter a month ? ");
	short year = ReadNumber("Plz enter a year ? ");
	short addedDays = ReadNumber("How many days do want to add ? ");

	short totalDays = NumberOfDaysFromBeginningOfYear(year, month, day);


	stDate Date = GetDateFromDayOrderInYear(totalDays, addedDays, year);

	cout << "Date after adding [" << addedDays << "] is : ";
	cout << Date.Day << "/" << Date.Month << "/" << Date.Year << endl;


	return 0;
}