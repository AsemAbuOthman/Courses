#pragma once

#include <iostream>

using namespace std;

template <typename t> class clsDynamicArray
{

private:
	int _Size = 0;
	t* _Array = NULL;

public:


	clsDynamicArray(int size) 
	{
		if (size < 0)
			size = 0;

		_Size = size;
		_Array = new t[_Size];
	}

	~clsDynamicArray()
	{
		delete[] _Array;
	}

	bool SetItem(int index, t item) 
	{
		if (index >= _Size || _Size < 0) {

			return false;
		}

		_Array[index] = item;

		return true;
	}

	bool IsEmpty()
	{
		return _Size == 0 ? true : false;
	}

	int Size() 
	{
		return _Size;
	}

	void PrintList() 
	{
		for (int i = 0; i < _Size; i++) 
		{
			cout << _Array[i] << " ";
		}

		cout << endl;
	}
};

