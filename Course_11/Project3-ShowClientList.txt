#include <iostream>
#include "clsBankClient.h"
#include "clsInputValidate.h"
#include <iomanip>


using namespace std;

void ReadClientInfo(clsBankClient& Client) 
{
    cout << "First Name : ";
    Client.FirstName = clsInputValidate::ReadString();

    cout << "Last Name : ";
    Client.LastName = clsInputValidate::ReadString();

    cout << "Email : ";
    Client.Email = clsInputValidate::ReadString();

    cout << "Phone : ";
    Client.Phone = clsInputValidate::ReadString();

    cout << "Pin Code : ";
    Client.PinCode = clsInputValidate::ReadString();

    cout << "AccountBallance: ";
    Client.AccountBalance = clsInputValidate::ReadDblNumber("Plz enter a float number : ");

}

//void UpdateClient() 
//{
//    string AccountNumber = "";
//
//    cout << "Plz enter an Account Number: ";
//    AccountNumber = clsInputValidate::ReadString();
//
//    while (!clsBankClient::IsClientExist(AccountNumber)) 
//    {
//        cout << "Account Number is not found, choose another one : ";
//        AccountNumber = clsInputValidate::ReadString();
//
//    }
//
//    clsBankClient Client1 = clsBankClient::Find(AccountNumber);
//    Client1.Print();
//
//    cout << "\n\nUpdate Client Info : ";
//    cout << "\n-----------------------\n";
//
//    ReadClientInfo(Client1);
//}

//void AddNewClient() 
//{
//    string AccountNumber = "";
//
//    cout << "\n Plz enter Account Number : ";
//    AccountNumber = clsInputValidate::ReadString();
//
//    while (clsBankClient::IsClientExist(AccountNumber)) 
//    {
//        cout << "\nAccount Number is already in used, Choose another one : ";
//        AccountNumber = clsInputValidate::ReadString();
//
//    }
//
//    clsBankClient NewClient = clsBankClient::GetAddNewClientObject(AccountNumber);
//
//    ReadClientInfo(NewClient);
//
//    clsBankClient::enSaveResults SaveResult;
//
//    SaveResult = NewClient.Save();
//
//    switch (SaveResult) 
//    {
//    case clsBankClient::enSaveResults::svSucceded:
//        cout << "Account Added Successfully :-)" << endl;
//        NewClient.Print();
//        break;
//    
//    case clsBankClient::enSaveResults::svFaildEmptyObject:
//
//        cout << "Error Account was not saved because it's Empty " << endl;
//        break;
//    
//    case clsBankClient::enSaveResults::svFaildAccountNumberExist:
//
//        cout << "Error Account is Already in used, try another one " << endl;
//        break;
//    
//    }
//
//}
//
//void DeleteClient() 
//{
//    string AccountNumber = "";
//    cout << "Enter Accout Number : ";
//    AccountNumber = clsInputValidate::ReadString();
//
//    while (!clsBankClient::IsClientExist(AccountNumber)) 
//    {
//        cout << "Client With Account Number is already in used, try another one : " << endl;
//        AccountNumber = clsInputValidate::ReadString();
//
//    }
//
//    clsBankClient Client = clsBankClient::Find(AccountNumber);
//    Client.Print();
//
//    char Answer = 'n';
//
//    cout << "Are you sure you want to delete this client y/n ? ";
//    cin >> Answer;
//
//    if (Answer = 'Y' || Answer == 'y')
//    {
//        if (Client.Delete()) 
//        {
//            cout << "Client Deleted Successfully :-)" << endl; 
//                Client.Print();
//        }
//        else 
//        {
//            cout << "Error Client was not Deleted :-(" << endl;
//        }
//    }
//
//}

void PrintClientRecordLine(clsBankClient Client) 
{
    cout << "| " << left << setw(15) << Client.AccountNumber();
    cout << "| " << left << setw(20) << Client.FirstName;
    cout << "| " << left << setw(12) << Client.Phone;
    cout << "| " << left << setw(20) << Client.Email;
    cout << "| " << left << setw(8) << Client.PinCode ;
    cout << "| " << left << setw(12) << Client.AccountBalance;
    cout << endl << endl;
}

void ShowClientsList()
{
    vector<clsBankClient> vClients = clsBankClient::GetClientsList();

    cout << "\n\t\t\tClients List (" << vClients.size() << ") Clients" << endl;
    cout << "-----------------------------------------------------------------"
        << "--------------------------------------------------\n" << endl;

    cout << "| " << left << setw(15) << "Account Number ";
    cout << "| " << left << setw(20) << "Client Name ";
    cout << "| " << left << setw(12) << "Phone ";
    cout << "| " << left << setw(20) << "Email ";
    cout << "| " << left << setw(8) << "Pin Code ";
    cout << "| " << left << setw(12) << "Account Ballances";

    cout << "\n\n-----------------------------------------------------------------"
        << "---------------------------------------------------\n" << endl;
    for (clsBankClient &Client : vClients) 
    {
        PrintClientRecordLine(Client);

    }

    cout << "\n\n-----------------------------------------------------------------"
        << "---------------------------------------------------\n" << endl;
}

int main()
{
    ShowClientsList();


    return 0;
}