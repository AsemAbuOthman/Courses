#pragma once

#include<iostream>

using namespace std;

template <class T>
class clsCalculator
{

private:
	T _Number1 = 0, _Number2 = 0;

public:

	clsCalculator()
	{

	}

	clsCalculator(T Number1, T Number2) 
	{
		_Number1 = Number1;
		_Number2 = Number2;

	}

	void SetNumber1(T Number1) 
	{
		_Number1 = Number1;
	}

	T GetNumber1() 
	{
		return _Number1;
	}

	void SetNumber2(T Number2) 
	{
		_Number2 = Number2;
	}

	T GetNumber2() 
	{
		return _Number2;
	}

	 T Add() 
	{
		return _Number1 + _Number2;
	}

	 T Subtract()
	{
		return _Number1 - _Number2;
	}

	 T Divide()
	{

		try
		{
			if (_Number2 == 0)
			{
				throw runtime_error("UNDEFINED 'Zero Divide'");
			}
			return _Number1 / _Number2;
		}
		catch (const runtime_error& e)
		{
			cerr << e.what() << endl;
			return 0;
		}
	}

	 T Multiply()
	{
		return _Number1 * _Number2;
	}

	void PrintResults() 
	{
		cout << _Number1 << " + " << _Number2 << " = " << Add() << endl;
		cout << _Number1 << " - " << _Number2 << " = " << Subtract() << endl;
		cout << _Number1 << " * " << _Number2 << " = " << Multiply() << endl;
		cout << _Number1 << " / " << _Number2 << " = " << Divide() << endl;
		cout << endl;
	}
};

